CREATE TABLE INGREDIENT (
    INGREDIENT_ID INT PRIMARY KEY,
    NAME VARCHAR(255),
    IS_VEGETARIAN VARCHAR(3),
    IS_VEGAN VARCHAR(3),
    IS_GLUTEN_FREE VARCHAR(3),
    MEAL_ID INT,
    FOREIGN KEY (MEAL_ID) REFERENCES MEAL(MEAL_ID)
);

CREATE TABLE MEAL (
    MEAL_ID INT PRIMARY KEY,
    NAME VARCHAR(255),
    DESCRIPTION TEXT,
    PRICE DECIMAL(10,2)
);

SELECT MEAL.NAME
FROM MEAL
INNER JOIN INGREDIENT
ON MEAL.MEAL_ID = INGREDIENT.MEAL_ID
WHERE INGREDIENT.NAME = 'garlic';

SELECT COUNT(DISTINCT MEAL.MEAL_ID)
FROM MEAL
INNER JOIN INGREDIENT
ON MEAL.MEAL_ID = INGREDIENT.MEAL_ID
WHERE INGREDIENT.IS_VEGETARIAN = 'Yes';

SELECT DISTINCT MEAL.NAME
FROM MEAL
INNER JOIN INGREDIENT
ON MEAL.MEAL_ID = INGREDIENT.MEAL_ID
WHERE INGREDIENT.IS_GLUTEN_FREE = 'Yes' AND INGREDIENT.IS_VEGAN = 'Yes';

SELECT AVG(ingredient_count)
FROM (
    SELECT COUNT(*) AS ingredient_count
    FROM INGREDIENT
    GROUP BY MEAL_ID
) AS counts;

SELECT MEAL.NAME
FROM MEAL
INNER JOIN INGREDIENT
ON MEAL.MEAL_ID = INGREDIENT.MEAL_ID
GROUP BY MEAL.NAME
HAVING COUNT(*) > 3;


CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);
CREATE TABLE ORDER (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)
);

SELECT *
FROM CUSTOMER
INNER JOIN ORDER
ON CUSTOMER.CUSTOMER_ID = ORDER.CUSTOMER_ID;


CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);
CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);

SELECT *
FROM PRODUCT
INNER JOIN INVENTORY
ON PRODUCT.PRODUCT_ID = INVENTORY.PRODUCT_ID;
